#!/usr/bin/env python

from __future__ import print_function

import roslib; roslib.load_manifest('teleop_twist_keyboard')
import rospy

from geometry_msgs.msg import Twist

import sys, select, termios, tty

msg = """
Reading from the keyboard  and Publishing to Twist!
---------------------------
Moving servo:
   j    k    l

Moving motor:
  u    i    o

Green LED = 'g'
Yellow LED = 'y'
Red LED = 'r'
Turn LEDs off = 'c'

Cancel program = ','

anything else : stop

CTRL-C to quit
"""

servoBindings = {
        'j':(0,-1),
        'k':(0,0),
        'l':(0,1),
        ',':(-1,0),
        ';':(1,0),
    }

motorBindings={
        'u':-1,
        'i':0,
        'o':1,
    }

ledBindings={
        'r':(1,0,0),
        'y':(0,1,0),
        'g':(0,0,1),
        'c':(0,0,0),
    }

def getKey():
    tty.setraw(sys.stdin.fileno())
    select.select([sys.stdin], [], [], 0)
    key = sys.stdin.read(1)
    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key


if __name__=="__main__":
    settings = termios.tcgetattr(sys.stdin)

    pub = rospy.Publisher('cmd_vel', Twist, queue_size = 1)
    rospy.init_node('teleop_twist_keyboard')

    x = 0
    servo = 0
    motor = 0
    redLED = 0
    greenLED = 0
    yellowLED = 0

    try:
        print(msg)
        while(1):
            key = getKey()
            if key in servoBindings.keys():
                x = servoBindings[key][0]
                servo = servoBindings[key][1]
                
            elif key in motorBindings.keys():
                motor = motorBindings[key]
                
            elif key in ledBindings.keys():
                redLED = ledBindings[key][0]
                yellowLED = ledBindings[key][1]
                greenLED = ledBindings[key][2]

            else:
                x = 0
                servo = 0
                motor = 0
                redLED = 0
                greenLED = 0
                yellowLED = 0
                servo = 0
                
                if (key == '\x03'):
                    break

            twist = Twist()
            twist.linear.x = x; twist.linear.y = redLED; twist.linear.z = yellowLED;
            twist.angular.x = greenLED; twist.angular.y = motor; twist.angular.z = servo
            pub.publish(twist)

    except Exception as e:
        print(e)

    finally:
        twist = Twist()
        twist.linear.x = 1; twist.linear.y = 0; twist.linear.z = 0
        twist.angular.x = 0; twist.angular.y = 0; twist.angular.z = 0
        pub.publish(twist)

        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
